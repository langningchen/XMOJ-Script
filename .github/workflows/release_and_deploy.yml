name: Release and Deploy
on:
  push:
    branches: ["master"]
    paths:
      - "XMOJ.user.js"
  workflow_dispatch:
permissions:
    id-token: write
    contents: write
    pages: write
    deployments: write
jobs:
  release:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Update Version
        id: get_version
        run: |
          node ./Update.js
      - name: Obfuscate JS
        run: |
          npm i minify -g
          minify  XMOJ.user.js > XMOJ.min.user.js
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          body: ${{ steps.get_version.outputs.version }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./XMOJ.user.js
          asset_name: XMOJ.user.js
          asset_content_type: text/plain
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./XMOJ.min.user.js
          asset_name: XMOJ.min.user.js
          asset_content_type: text/plain
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
      - name: Push new version
        run: |
          git config --global user.name "langningchen"
          git config --global user.email "jpxx_chenlangning@outlook.com"
          git add .
          git commit -m "Update version to ${{ steps.get_version.outputs.version }}"
          git push
